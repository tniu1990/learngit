1.创建版本库：

初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

    使用命令git add <file>，注意，可反复多次使用，添加多个文件；
    使用命令git commit -m <message>，完成
    


2.时光机穿梭

    要随时掌握工作区的状态，使用git status命令。

    如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
    
    

3.版本回退

    HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

    穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

    要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。



4.工作区和暂存区

    git diff                 比较工作目录中当前文件和暂存区域快照之间的差异， 也就是修改之后还没有暂存起来的变化内容。
    git diff --cached        查看已暂存的将要添加到下次提交里的内容。
    git diff HEAD -- <file>  查看工作区和版本库里面最新版本的区别。



5.管理修改
    Git比其他版本控制系统设计得优秀，因为Git跟踪并管理的是修改，而非文件。
    Git是如何跟踪修改的 -- 每次修改，如果不用git add到暂存区，那就不会加入到commit中。